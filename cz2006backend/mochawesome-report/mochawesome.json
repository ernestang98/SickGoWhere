{
  "stats": {
    "suites": 20,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-08T10:00:46.535Z",
    "end": "2021-04-08T10:00:51.769Z",
    "duration": 5234,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d240c6f3-322c-4c68-b2e5-5ec0f655b4cc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74d24d61-341a-403d-9910-6ad330cc8576",
          "title": "Connection of server",
          "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
          "file": "/test/test.server.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "34a16af6-95bc-4580-af82-8054483bc44b",
              "title": "GET /",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET Hello World",
                  "fullTitle": "Connection of server GET / It should GET Hello World",
                  "timedOut": false,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.text.should.be.eq(\"Hello World\");\n        done();\n    });",
                  "err": {},
                  "uuid": "c4c87937-959e-47e3-aa5a-c54a8423c94f",
                  "parentUUID": "34a16af6-95bc-4580-af82-8054483bc44b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4c87937-959e-47e3-aa5a-c54a8423c94f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "49c192fa-ffd0-4fee-9a7a-489722dad4cd",
              "title": "GET /error",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET an error",
                  "fullTitle": "Connection of server GET /error It should GET an error",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/error\")\n    .end((err, response) => {\n        response.should.have.status(404);\n        done();\n    });",
                  "err": {},
                  "uuid": "1624b327-6647-4b4b-a802-7dc4a6975d56",
                  "parentUUID": "49c192fa-ffd0-4fee-9a7a-489722dad4cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1624b327-6647-4b4b-a802-7dc4a6975d56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 37,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22182b40-50b7-4c89-ba5b-f7ccbfbfb830",
          "title": "Authentication API",
          "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
          "file": "/test/test.server.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2df99a77-c936-4e47-87b5-5a9d53e06788",
              "title": "POST /login with verified and valid credentials",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should log into server successfully",
                  "fullTitle": "Authentication API POST /login with verified and valid credentials It should log into server successfully",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"ernestang98@gmail.com\",\n                password: \"ernest\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(200);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"success\");\n                    done();\n                });",
                  "err": {},
                  "uuid": "826674c8-41d5-4f38-8fc8-4919cd07203d",
                  "parentUUID": "2df99a77-c936-4e47-87b5-5a9d53e06788",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "826674c8-41d5-4f38-8fc8-4919cd07203d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "d8a7519b-682c-4d57-86bb-c7415ad80aff",
              "title": "POST /login with verified but invalid credentials",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Correct email, wrong password. It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with verified but invalid credentials Correct email, wrong password. It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"ernestang98@gmail.com\",\n                password: \"wrong one\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "239cc3b7-87a0-4990-b7fd-f672621960da",
                  "parentUUID": "d8a7519b-682c-4d57-86bb-c7415ad80aff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Wrong email, wrong password. It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with verified but invalid credentials Wrong email, wrong password. It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"wrong one\",\n                password: \"wrong one\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "734885f5-a127-49f0-aa69-2e28c7a57ab0",
                  "parentUUID": "d8a7519b-682c-4d57-86bb-c7415ad80aff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Wrong email, correct password. It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with verified but invalid credentials Wrong email, correct password. It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"wrong one\",\n                password: \"ernest\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "58681f73-308e-476e-b68f-bedc660d6298",
                  "parentUUID": "d8a7519b-682c-4d57-86bb-c7415ad80aff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "239cc3b7-87a0-4990-b7fd-f672621960da",
                "734885f5-a127-49f0-aa69-2e28c7a57ab0",
                "58681f73-308e-476e-b68f-bedc660d6298"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 79,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6bbd449-e20d-40e8-b16d-3e02c9f93a94",
              "title": "POST /login with unverified but valid credentials",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Correct password, correct username: It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with unverified but valid credentials Correct password, correct username: It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"myofficialemail1998@gmail.com\",\n                password: \"ernest\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(200);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"pending\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Validate Account via email!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "b2b65d29-5c08-4972-ad30-dfcbab3e3baf",
                  "parentUUID": "f6bbd449-e20d-40e8-b16d-3e02c9f93a94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2b65d29-5c08-4972-ad30-dfcbab3e3baf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a3207ee3-a90b-4d80-91a4-87afd39df4c6",
              "title": "POST /login with unverified and invalid credentials",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Correct email, wrong password. It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with unverified and invalid credentials Correct email, wrong password. It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"ernestang98@gmail.com\",\n                password: \"wrong one\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "4622cbe5-1a39-4e5b-b200-b65c9f70241e",
                  "parentUUID": "a3207ee3-a90b-4d80-91a4-87afd39df4c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Wrong email, wrong username: It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with unverified and invalid credentials Wrong email, wrong username: It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"wrong one\",\n                password: \"wrong one\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "68bb31a8-931e-48d1-bbd4-48469542eb76",
                  "parentUUID": "a3207ee3-a90b-4d80-91a4-87afd39df4c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Wrong email and correct password: It should log into server unsuccessfully",
                  "fullTitle": "Authentication API POST /login with unverified and invalid credentials Wrong email and correct password: It should log into server unsuccessfully",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginDetails = {\n                email: \"wrong one\",\n                password: \"ernest\"\n            };\n            chai.request(server)\n                .post(\"/login\")\n                .send(loginDetails)\n                .end((err, response) => {\n                    response.should.have.status(404);\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"failure\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\").eq(\"Email and/or password incorrect!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "4cab4ecb-5646-4bd7-b1f2-c5325bd56fcf",
                  "parentUUID": "a3207ee3-a90b-4d80-91a4-87afd39df4c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4622cbe5-1a39-4e5b-b200-b65c9f70241e",
                "68bb31a8-931e-48d1-bbd4-48469542eb76",
                "4cab4ecb-5646-4bd7-b1f2-c5325bd56fcf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 108,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b1415713-a8f6-4544-80e3-df5b313d74f8",
              "title": "POST /signup with valid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should create an account successfully",
                  "fullTitle": "Authentication API POST /signup with valid inputs It should create an account successfully",
                  "timedOut": false,
                  "duration": 3125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const signUpDetails = {\n    firstName: firstName,\n    lastName: lastName,\n    email: email + \"@gmail.com\",\n    password: \"ernest\"\n};\nchai.request(server)\n    .post(\"/signup\")\n    .send(signUpDetails)\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"success\");\n        response.body.should.have.property('data')\n            .that.has.property(\"message\")\n            .eq(\"You have signed up successfully, please verify the email!\")\n        done()\n    });",
                  "err": {},
                  "uuid": "6acbf9a6-9983-4d76-9a18-2a1dd0808065",
                  "parentUUID": "b1415713-a8f6-4544-80e3-df5b313d74f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6acbf9a6-9983-4d76-9a18-2a1dd0808065"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3125,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "9c6fe9d7-d260-4ce5-bb17-1b5b1862e187",
              "title": "POST /signup with invalid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Empty inputs: It should return an error",
                  "fullTitle": "Authentication API POST /signup with invalid inputs Empty inputs: It should return an error",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const signUpDetails = {\n    firstName: \"Ernest\",\n    email: id + \"@gmail.com\",\n    password: \"ernest\"\n};\nchai.request(server)\n    .post(\"/signup\")\n    .send(signUpDetails)\n    .end((err, response) => {\n        response.should.have.status(404);\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"failure\");\n        response.body.should.have.property('data')\n            .that.has.property(\"message\")\n            .eq(\"All fields must be entered!\")\n        done()\n    });",
                  "err": {},
                  "uuid": "461c5115-f671-4dcb-99ae-0229d429283f",
                  "parentUUID": "9c6fe9d7-d260-4ce5-bb17-1b5b1862e187",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Already registered email: It should return an error",
                  "fullTitle": "Authentication API POST /signup with invalid inputs Already registered email: It should return an error",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const signUpDetails = {\n    firstName: \"Ernest\",\n    lastName: \"ang\",\n    email: \"ernestang98@gmail.com\",\n    password: \"ernest\"\n};\nchai.request(server)\n    .post(\"/signup\")\n    .send(signUpDetails)\n    .end((err, response) => {\n        response.should.have.status(404);\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"failure\");\n        response.body.should.have.property('data')\n            .that.has.property(\"message\")\n            .eq(\"Email is already registered\")\n        done()\n    });",
                  "err": {},
                  "uuid": "c58c4d9e-12b1-4b00-9b28-80e077fe7054",
                  "parentUUID": "9c6fe9d7-d260-4ce5-bb17-1b5b1862e187",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "461c5115-f671-4dcb-99ae-0229d429283f",
                "c58c4d9e-12b1-4b00-9b28-80e077fe7054"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72a11182-172f-40ca-898c-d6a3506b11c7",
          "title": "Appointment API",
          "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
          "file": "/test/test.server.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5ee7bf63-45ea-4850-a755-763f34e9d59c",
              "title": "POST /createAppointment with invalid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "No such userId: It should return an error",
                  "fullTitle": "Appointment API POST /createAppointment with invalid inputs No such userId: It should return an error",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const createAppointment = {\n    userId: mongoose.Types.ObjectId(\"4edd40c86762e0fb12000003\"),\n    clinicName: \"Ernest Clinic\",\n    clinicLong: 999,\n    clinicLat: 999,\n    date: \"99-99-9999\",\n    time: \"99:99\",\n    others: \"NILL\"\n};\nchai.request(server)\n    .post(\"/createAppointment\")\n    .send(createAppointment)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"Failure\");\n        response.body.should.have.property('data')\n            .that.has.property(\"message\")\n            .eq(\"No user found!\")\n        done()\n    });",
                  "err": {},
                  "uuid": "bd6d61e5-91fe-4af1-a9b2-642e59a0e60e",
                  "parentUUID": "5ee7bf63-45ea-4850-a755-763f34e9d59c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UserId already have booking: It should return an error",
                  "fullTitle": "Appointment API POST /createAppointment with invalid inputs UserId already have booking: It should return an error",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const createAppointment = {\n    userId: mongoose.Types.ObjectId(\"6066abb68728e8129b54bb03\"),\n    clinicName: \"Ernest Clinic\",\n    clinicLong: 999,\n    clinicLat: 999,\n    date: \"99-99-9999\",\n    time: \"99:99\",\n    others: \"NILL\"\n};\nchai.request(server)\n    .post(\"/createAppointment\")\n    .send(createAppointment)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"failure\");\n        response.body.should.have.property('data')\n            .that.has.property(\"message\")\n            .eq(\"You already booked an appointment!\")\n        done()\n    });",
                  "err": {},
                  "uuid": "dc566181-8db2-4ab8-aec6-e7fb6079ec1d",
                  "parentUUID": "5ee7bf63-45ea-4850-a755-763f34e9d59c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd6d61e5-91fe-4af1-a9b2-642e59a0e60e",
                "dc566181-8db2-4ab8-aec6-e7fb6079ec1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9e45b9e8-be6e-4798-beb6-61ac4c3f6142",
              "title": "POST /createAppointment with valid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"POST /createAppointment with valid inputs\"",
                  "fullTitle": "Appointment API POST /createAppointment with valid inputs \"after each\" hook in \"POST /createAppointment with valid inputs\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete(\"/deleteAppointment\")\n    .send(deleteAppointment)\n    .end((err, response) => {\n        response.body.should.have.property('message')\n            .eq(\"success\")\n    })\ndone()",
                  "err": {},
                  "uuid": "ab713d3c-7d37-449b-a469-e4cf63ec68ef",
                  "parentUUID": "9e45b9e8-be6e-4798-beb6-61ac4c3f6142",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API POST /createAppointment with valid inputs It should be successful",
                  "timedOut": false,
                  "duration": 77,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const createAppointment = {\n                userId: mongoose.Types.ObjectId(\"60669b419f52add2216dc188\"),\n                clinicName: \"Ernest Clinic\",\n                clinicLong: 999,\n                clinicLat: 999,\n                date: \"99-99-9999\",\n                time: \"99:99\",\n                others: \"NILL\"\n            };\n            chai.request(server)\n                .post(\"/createAppointment\")\n                .send(createAppointment)\n                .end((err, response) => {\n                    response.body.should.be.a('object');\n                    response.body.should.have.property('status').eq(\"success\");\n                    response.body.should.have.property('data')\n                        .that.has.property(\"message\")\n                        .eq(\"Appointment Booked!\")\n                    done()\n                });",
                  "err": {},
                  "uuid": "7d609efd-681c-46fe-862f-8eb1887254c0",
                  "parentUUID": "9e45b9e8-be6e-4798-beb6-61ac4c3f6142",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d609efd-681c-46fe-862f-8eb1887254c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "7b9bfc37-dbb3-4893-a87f-03d1e2184197",
              "title": "GET /readAppointment with valid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"GET /readAppointment with valid inputs\"",
                  "fullTitle": "Appointment API GET /readAppointment with valid inputs \"before each\" hook in \"GET /readAppointment with valid inputs\"",
                  "timedOut": false,
                  "duration": 31,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post(\"/createAppointment\")\n    .send(createAppointment)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        done()\n    });",
                  "err": {},
                  "uuid": "c06ffc59-fc88-4b1b-9447-4934dd6285e9",
                  "parentUUID": "7b9bfc37-dbb3-4893-a87f-03d1e2184197",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"GET /readAppointment with valid inputs\"",
                  "fullTitle": "Appointment API GET /readAppointment with valid inputs \"after each\" hook in \"GET /readAppointment with valid inputs\"",
                  "timedOut": false,
                  "duration": 34,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete(\"/deleteAppointment\")\n    .send(deleteAppointment)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        done()\n    })",
                  "err": {},
                  "uuid": "eef23cb6-8fa8-415f-9520-1f2695228eda",
                  "parentUUID": "7b9bfc37-dbb3-4893-a87f-03d1e2184197",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API GET /readAppointment with valid inputs It should be successful",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/readAppointment/60669b419f52add2216dc188\")\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        // response.body.should.have.property('data')\n        done()\n    })",
                  "err": {},
                  "uuid": "2dce17d4-7d8d-443b-a265-82e92ec63e87",
                  "parentUUID": "7b9bfc37-dbb3-4893-a87f-03d1e2184197",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dce17d4-7d8d-443b-a265-82e92ec63e87"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "d0fef04b-37b7-495d-b842-7322ea661ff5",
              "title": "GET /readAppointment with invalid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API GET /readAppointment with invalid inputs It should be successful",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/readAppointment/60669b419f52addasdasd2216dc180\")\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('message')\n        done()\n    })",
                  "err": {},
                  "uuid": "d5fecfff-5236-4c0b-9253-825850046f42",
                  "parentUUID": "d0fef04b-37b7-495d-b842-7322ea661ff5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5fecfff-5236-4c0b-9253-825850046f42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "38aa266d-0d0f-4fdc-afda-9b3ae6fc5aec",
              "title": "POST /readTimeSlots",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API POST /readTimeSlots It should be successful",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post(\"/readTimeSlots\")\n    .send(clinic)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"notEmpty\")\n        done()\n    })",
                  "err": {},
                  "uuid": "82d21e99-bc6e-4ef4-8352-8ba030747771",
                  "parentUUID": "38aa266d-0d0f-4fdc-afda-9b3ae6fc5aec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API POST /readTimeSlots It should be successful",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post(\"/readTimeSlots\")\n    .send(clinicErr)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('status').eq(\"empty\")\n        done()\n    })",
                  "err": {},
                  "uuid": "acad7a4e-a6b4-4a5d-9d71-a1f4272e9a33",
                  "parentUUID": "38aa266d-0d0f-4fdc-afda-9b3ae6fc5aec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82d21e99-bc6e-4ef4-8352-8ba030747771",
                "acad7a4e-a6b4-4a5d-9d71-a1f4272e9a33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 33,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f7278173-d11f-4210-892f-3dabd50690c6",
              "title": "PUT /updateAppoint with invalid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be unsuccessful",
                  "fullTitle": "Appointment API PUT /updateAppoint with invalid inputs It should be unsuccessful",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .put(\"/updateAppointment\")\n    .send(invalid1)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('message').eq(\"failure\")\n        done()\n    })",
                  "err": {},
                  "uuid": "3885e963-c66e-47ef-80e1-99fc54d6ae51",
                  "parentUUID": "f7278173-d11f-4210-892f-3dabd50690c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should be unsuccessful",
                  "fullTitle": "Appointment API PUT /updateAppoint with invalid inputs It should be unsuccessful",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post(\"/updateAppointment\")\n    .send(invalid2)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        done()\n    })",
                  "err": {},
                  "uuid": "36ad1d28-14a2-4ee4-ac72-5c0612b61147",
                  "parentUUID": "f7278173-d11f-4210-892f-3dabd50690c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3885e963-c66e-47ef-80e1-99fc54d6ae51",
                "36ad1d28-14a2-4ee4-ac72-5c0612b61147"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4e83b2a3-1afb-4116-86d8-225098025fe7",
              "title": "PUT /updateAppoint with valid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API PUT /updateAppoint with valid inputs It should be successful",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .put(\"/updateAppointment\")\n    .send(invalid1)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        response.body.should.have.property('message').eq(\"Success!\")\n        done()\n    })",
                  "err": {},
                  "uuid": "967ac58d-3df1-4f7b-a66b-3c32e73ef0f6",
                  "parentUUID": "4e83b2a3-1afb-4116-86d8-225098025fe7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "967ac58d-3df1-4f7b-a66b-3c32e73ef0f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 84,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8022f073-3ba6-4495-9acc-5677894fe5c3",
              "title": "DELETE /deleteAppointment with valid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"DELETE /deleteAppointment with valid inputs\"",
                  "fullTitle": "Appointment API DELETE /deleteAppointment with valid inputs \"before each\" hook in \"DELETE /deleteAppointment with valid inputs\"",
                  "timedOut": false,
                  "duration": 104,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post(\"/createAppointment\")\n    .send(createAppointment)\n    .end((err, response) => {\n        response.body.should.be.a('object');\n        done()\n    });",
                  "err": {},
                  "uuid": "57c6eda4-a029-464e-81c1-afb596251895",
                  "parentUUID": "8022f073-3ba6-4495-9acc-5677894fe5c3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be successful",
                  "fullTitle": "Appointment API DELETE /deleteAppointment with valid inputs It should be successful",
                  "timedOut": false,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const deleteAppointment = {\n                userId: \"606abc0ae5ebf42060182510\"\n            }\n            chai.request(server)\n                .delete(\"/deleteAppointment\")\n                .send(deleteAppointment)\n                .end((err, response) => {\n                    response.body.should.have.property('message')\n                        .eq(\"success\")\n                    done()\n                })",
                  "err": {},
                  "uuid": "5868dec2-0e58-4d34-b90d-783ddfb2b046",
                  "parentUUID": "8022f073-3ba6-4495-9acc-5677894fe5c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5868dec2-0e58-4d34-b90d-783ddfb2b046"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 56,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "5bd53cbc-99d7-4b8f-b69d-ea5420bca030",
              "title": "DELETE /deleteAppointment with invalid inputs",
              "fullFile": "/Users/ernestang98/Desktop/Year 2 Sem 2/CZ2006/cz2006project/cz2006backend/test/test.server.js",
              "file": "/test/test.server.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should be unsuccessful",
                  "fullTitle": "Appointment API DELETE /deleteAppointment with invalid inputs It should be unsuccessful",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const deleteAppointment = {\n                userId: \"60669b41asdfhsdfgka9f52add2216dc188\"\n            }\n            chai.request(server)\n                .delete(\"/deleteAppointment\")\n                .send(deleteAppointment)\n                .end((err, response) => {\n                    response.body.should.have.property('message')\n                        .eq(\"failure\")\n                    done()\n                })",
                  "err": {},
                  "uuid": "f0d08e39-a657-49f8-98b1-ace0332d2a50",
                  "parentUUID": "5bd53cbc-99d7-4b8f-b69d-ea5420bca030",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should be unsuccessful",
                  "fullTitle": "Appointment API DELETE /deleteAppointment with invalid inputs It should be unsuccessful",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n                .delete(\"/deleteAppointment\")\n                .end((err, response) => {\n                    response.body.should.have.property('message')\n                        .eq(\"failure\")\n                    done()\n                })",
                  "err": {},
                  "uuid": "84e7a6a3-9f46-47d7-9770-a6a2a9d39b54",
                  "parentUUID": "5bd53cbc-99d7-4b8f-b69d-ea5420bca030",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0d08e39-a657-49f8-98b1-ace0332d2a50",
                "84e7a6a3-9f46-47d7-9770-a6a2a9d39b54"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}